{"ast":null,"code":"const postReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_POST':\n      return state.concat([action.data]);\n\n    case 'DELETE_POST':\n      return state.filter(post);\n\n    default:\n      return state;\n  }\n}; //what is action.data? Well it’s nothing but an object with our individual post title and the post message\n//whenever the ‘ADD_POST’ event happens we want to push some data into the state array.\n// import in index.js file\n//pass this to component using provider in index.js\n\n\nexport default postReducer;","map":{"version":3,"sources":["C:/personal projects/crud-redux/src/reducers/postReducer.js"],"names":["postReducer","state","action","type","concat","data","filter","post"],"mappings":"AAAA,MAAMA,WAAW,GAAE,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAqB;AACpC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACgB,aAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AAChB,SAAK,aAAL;AACgB,aAAOJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAP;;AAChB;AACgB,aAAON,KAAP;AANpB;AASH,CAVD,C,CAWA;AACA;AACA;AACA;;;AACA,eAAeD,WAAf","sourcesContent":["const postReducer =(state= [], action)=>{\r\n    switch(action.type){\r\n        case 'ADD_POST':\r\n                        return state.concat([action.data]);\r\n        case 'DELETE_POST':\r\n                        return state.filter(post)\r\n        default :\r\n                        return state;\r\n    }\r\n\r\n}\r\n//what is action.data? Well it’s nothing but an object with our individual post title and the post message\r\n//whenever the ‘ADD_POST’ event happens we want to push some data into the state array.\r\n// import in index.js file\r\n//pass this to component using provider in index.js\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}